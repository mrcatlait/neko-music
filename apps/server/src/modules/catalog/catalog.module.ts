import { Global, Module } from '@nestjs/common'

import {
  AlbumController,
  ArtistController,
  ArtistManagementController,
  GenreController,
  GenreManagementController,
  TrackController,
} from './controllers'
import {
  GenreRepository,
  AlbumRepository,
  ArtistRepository,
  TrackRepository,
  AlbumArtistRepository,
  AlbumGenreRepository,
  ArtistGenreRepository,
  TrackGenreRepository,
  TrackArtistRepository,
} from './repositories'
import {
  AddGenreUseCase,
  AddGenreValidator,
  CreateAlbumUseCase,
  CreateAlbumValidator,
  CreateArtistUseCase,
  CreateArtistValidator,
  CreateTrackUseCase,
  CreateTrackValidator,
  GetArtistArtworkUploadTokenUseCase,
  GetArtistArtworkUploadTokenValidator,
  GetArtistUseCase,
  GetTracksForAlbumUseCase,
  ListAllArtistsUseCase,
  ListAllGenresUseCase,
  ListPublishedGenresUseCase,
  PublishGenreUseCase,
  PublishGenreValidator,
  UpdateArtistStatusUseCase,
  UpdateArtistStatusValidator,
  UpdateArtistUseCase,
  UpdateArtistValidator,
  UpdateVerifiedStatusUseCase,
  UpdateVerifiedStatusValidator,
} from './use-cases'

@Global()
@Module({
  controllers: [
    AlbumController,
    ArtistController,
    ArtistManagementController,
    GenreController,
    GenreManagementController,
    TrackController,
  ],
  providers: [
    // Use cases
    AddGenreUseCase,
    AddGenreValidator,
    ListAllArtistsUseCase,
    ListAllGenresUseCase,
    ListPublishedGenresUseCase,
    PublishGenreUseCase,
    PublishGenreValidator,
    CreateAlbumUseCase,
    CreateAlbumValidator,
    CreateArtistUseCase,
    CreateArtistValidator,
    CreateTrackUseCase,
    CreateTrackValidator,
    GetArtistUseCase,
    GetArtistArtworkUploadTokenUseCase,
    GetArtistArtworkUploadTokenValidator,
    GetTracksForAlbumUseCase,
    UpdateArtistUseCase,
    UpdateArtistValidator,
    UpdateArtistStatusUseCase,
    UpdateArtistStatusValidator,
    UpdateVerifiedStatusUseCase,
    UpdateVerifiedStatusValidator,
    // Repositories
    AlbumArtistRepository,
    AlbumGenreRepository,
    AlbumRepository,
    ArtistGenreRepository,
    ArtistRepository,
    GenreRepository,
    TrackArtistRepository,
    TrackGenreRepository,
    TrackRepository,
  ],
})
export class CatalogModule {}
