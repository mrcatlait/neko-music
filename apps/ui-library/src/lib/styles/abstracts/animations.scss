// =============================================================================
// MATERIAL 3 ANIMATIONS FOR WEB
// =============================================================================
// Based on M3 motion guidelines and web UX best practices
// Web animations are 2x shorter than mobile (150-200ms vs 200-300ms)

// =============================================================================
// MATERIAL 3 ANIMATIONS FOR WEB - TOKEN-DRIVEN RESPONSIVE SYSTEM
// =============================================================================
// Clean animation mixins that automatically adapt via responsive motion tokens
// Device timing is controlled entirely by CSS custom properties in motions.scss

// =============================================================================
// MATERIAL 3 ANIMATIONS - CALC() MULTIPLIER SYSTEM
// =============================================================================
// Clean animation mixins with calc() multiplier support
// Change --motion-multiplier to instantly adjust ALL animation timings

// -----------------------------------------------------------------------------
// CORE ANIMATION PATTERNS (Material 3)
// -----------------------------------------------------------------------------

// 1. FADE ANIMATIONS
// Used for: Simple opacity changes, overlays, tooltips
@mixin fade-in($duration: var(--motion-duration-short3), $easing: var(--motion-easing-standard)) {
  opacity: 0;
  animation: fade-in $duration $easing forwards;
}

@mixin fade-out($duration: var(--motion-duration-short2), $easing: var(--motion-easing-standard)) {
  animation: fade-out $duration $easing forwards;
}

// 2. FADE THROUGH PATTERN (M3 Specific)
// Used for: Content replacement, tab switching
@mixin fade-through-out($duration: var(--motion-duration-short1), $easing: var(--motion-easing-standard-accelerate)) {
  animation: fade-through-out $duration $easing forwards;
}

@mixin fade-through-in($duration: var(--motion-duration-short3), $easing: var(--motion-easing-standard-decelerate), $delay: var(--motion-duration-short1)) {
  opacity: 0;
  animation: fade-through-in $duration $easing $delay forwards;
}

// 3. SHARED AXIS TRANSITIONS (M3 Core Pattern)
// Used for: Navigation, page transitions, content hierarchy

// X-Axis (Left/Right navigation)
@mixin shared-axis-x-forward($duration: var(--motion-duration-medium1), $easing: var(--motion-easing-emphasized-decelerate)) {
  opacity: 0;
  transform: translateX(30px);
  animation: shared-axis-x-forward $duration $easing forwards;
}

@mixin shared-axis-x-backward($duration: var(--motion-duration-medium1), $easing: var(--motion-easing-emphasized-decelerate)) {
  opacity: 0;
  transform: translateX(-30px);
  animation: shared-axis-x-backward $duration $easing forwards;
}

// Y-Axis (Up/Down navigation) 
@mixin shared-axis-y-forward($duration: var(--motion-duration-medium1), $easing: var(--motion-easing-emphasized-decelerate)) {
  opacity: 0;
  transform: translateY(30px);
  animation: shared-axis-y-forward $duration $easing forwards;
}

@mixin shared-axis-y-backward($duration: var(--motion-duration-medium1), $easing: var(--motion-easing-emphasized-decelerate)) {
  opacity: 0;
  transform: translateY(-30px);
  animation: shared-axis-y-backward $duration $easing forwards;
}

// Z-Axis (Depth/Scale navigation)
@mixin shared-axis-z-forward($duration: var(--motion-duration-medium1), $easing: var(--motion-easing-emphasized-decelerate)) {
  opacity: 0;
  transform: scale(0.8);
  animation: shared-axis-z-forward $duration $easing forwards;
}

@mixin shared-axis-z-backward($duration: var(--motion-duration-medium1), $easing: var(--motion-easing-emphasized-decelerate)) {
  opacity: 0;
  transform: scale(1.1);
  animation: shared-axis-z-backward $duration $easing forwards;
}

// 4. CONTAINER TRANSFORM (M3 Hero Pattern)
// Used for: Element morphing, card expansions, hero transitions
@mixin container-transform-enter($duration: var(--motion-duration-medium2), $easing: var(--motion-easing-emphasized)) {
  opacity: 0;
  transform: scale(0.8);
  border-radius: 50%;
  animation: container-transform-enter $duration $easing forwards;
}

@mixin container-transform-exit($duration: var(--motion-duration-short4), $easing: var(--motion-easing-emphasized-accelerate)) {
  animation: container-transform-exit $duration $easing forwards;
}

// 5. SLIDE ANIMATIONS
@mixin slide-in-from-bottom($duration: var(--motion-duration-medium1), $easing: var(--motion-easing-emphasized-decelerate)) {
  opacity: 0;
  transform: translateY(100%);
  animation: slide-in-from-bottom $duration $easing forwards;
}

@mixin slide-in-from-top($duration: var(--motion-duration-medium1), $easing: var(--motion-easing-emphasized-decelerate)) {
  opacity: 0;
  transform: translateY(-100%);
  animation: slide-in-from-top $duration $easing forwards;
}

@mixin slide-in-from-left($duration: var(--motion-duration-medium1), $easing: var(--motion-easing-emphasized-decelerate)) {
  opacity: 0;
  transform: translateX(-100%);
  animation: slide-in-from-left $duration $easing forwards;
}

@mixin slide-in-from-right($duration: var(--motion-duration-medium1), $easing: var(--motion-easing-emphasized-decelerate)) {
  opacity: 0;
  transform: translateX(100%);
  animation: slide-in-from-right $duration $easing forwards;
}

@mixin slide-out-to-bottom($duration: var(--motion-duration-short3), $easing: var(--motion-easing-emphasized-accelerate)) {
  animation: slide-out-to-bottom $duration $easing forwards;
}

@mixin slide-out-to-top($duration: var(--motion-duration-short3), $easing: var(--motion-easing-emphasized-accelerate)) {
  animation: slide-out-to-top $duration $easing forwards;
}

@mixin slide-out-to-left($duration: var(--motion-duration-short3), $easing: var(--motion-easing-emphasized-accelerate)) {
  animation: slide-out-to-left $duration $easing forwards;
}

@mixin slide-out-to-right($duration: var(--motion-duration-short3), $easing: var(--motion-easing-emphasized-accelerate)) {
  animation: slide-out-to-right $duration $easing forwards;
}

// -----------------------------------------------------------------------------
// CALC() MULTIPLIER HELPERS
// -----------------------------------------------------------------------------

// Scale any base duration by a factor while maintaining device responsiveness
@mixin scaled-animation($animation, $base-duration, $scale-factor: 1, $easing: var(--motion-easing-emphasized-decelerate)) {
  animation: $animation calc(#{$base-duration} * #{$scale-factor}) $easing forwards;
  // Example: scaled-animation(fade-in, var(--motion-duration-short3), 2)
  // Mobile: (150ms * 2) * 1 = 300ms
  // Desktop: (150ms * 2) * 0.5 = 150ms  
}

// Quick duration multipliers using calc()
@mixin ultra-fast-animation($animation, $easing: var(--motion-easing-emphasized-decelerate)) {
  animation: $animation calc(var(--motion-duration-short1) * 0.5) $easing forwards;
  // Always 50% of the shortest duration (device-responsive)
}

@mixin slow-animation($animation, $easing: var(--motion-easing-emphasized-decelerate)) {
  animation: $animation calc(var(--motion-duration-medium2) * 1.5) $easing forwards;
  // 150% of medium duration (device-responsive)
}

@mixin custom-multiplier($animation, $multiplier: 1, $easing: var(--motion-easing-emphasized-decelerate)) {
  animation: $animation calc(var(--motion-duration-short3) * #{$multiplier}) $easing forwards;
  // Custom multiplier applied to base duration
}

// Device-agnostic duration scaling
@mixin relative-duration($animation, $base-token, $scale: 1, $easing: var(--motion-easing-emphasized-decelerate)) {
  animation: $animation calc(#{$base-token} * #{$scale}) $easing forwards;
  // Scale any duration token while maintaining device responsiveness
  // Example: relative-duration(fade-in, var(--motion-duration-medium1), 0.8)
}

// -----------------------------------------------------------------------------
// COMPONENT-SPECIFIC MIXINS
// -----------------------------------------------------------------------------

// DIALOG & MODALS
@mixin dialog-enter($duration: var(--motion-duration-short4)) {
  @include shared-axis-z-forward($duration);
}

@mixin dialog-exit($duration: var(--motion-duration-short3)) {
  animation: fade-out $duration var(--motion-easing-emphasized-accelerate) forwards;
}

// SHEETS & DRAWERS
@mixin sheet-enter-from-bottom($duration: var(--motion-duration-medium1)) {
  @include slide-in-from-bottom($duration);
}

@mixin sheet-enter-from-top($duration: var(--motion-duration-medium1)) {
  @include slide-in-from-top($duration);
}

@mixin sheet-enter-from-left($duration: var(--motion-duration-medium1)) {
  @include slide-in-from-left($duration);
}

@mixin sheet-enter-from-right($duration: var(--motion-duration-medium1)) {
  @include slide-in-from-right($duration);
}

@mixin sheet-exit-to-bottom($duration: var(--motion-duration-short3)) {
  @include slide-out-to-bottom($duration);
}

@mixin sheet-exit-to-top($duration: var(--motion-duration-short3)) {
  @include slide-out-to-top($duration);
}

@mixin sheet-exit-to-left($duration: var(--motion-duration-short3)) {
  @include slide-out-to-left($duration);
}

@mixin sheet-exit-to-right($duration: var(--motion-duration-short3)) {
  @include slide-out-to-right($duration);
}

// MENUS & DROPDOWNS
@mixin menu-enter($duration: var(--motion-duration-short3)) {
  animation: menu-enter $duration var(--motion-easing-emphasized-decelerate) forwards;
}

@mixin menu-exit($duration: var(--motion-duration-short2)) {
  animation: fade-out $duration var(--motion-easing-emphasized-accelerate) forwards;
}

// TOOLTIPS
@mixin tooltip-enter($duration: var(--motion-duration-short2)) {
  @include fade-in($duration);
}

@mixin tooltip-exit($duration: var(--motion-duration-short1)) {
  @include fade-out($duration);
}

// SNACKBARS & NOTIFICATIONS
@mixin snackbar-enter($duration: var(--motion-duration-medium1)) {
  @include sheet-enter-from-bottom($duration);
}

@mixin snackbar-exit($duration: var(--motion-duration-short3)) {
  @include sheet-exit-to-bottom($duration);
}

// FLOATING ACTION BUTTON (FAB)
@mixin fab-enter($duration: var(--motion-duration-short4)) {
  opacity: 0;
  transform: scale(0);
  animation: fab-enter $duration var(--motion-easing-emphasized-decelerate) forwards;
}

@mixin fab-exit($duration: var(--motion-duration-short3)) {
  animation: fab-exit $duration var(--motion-easing-emphasized-accelerate) forwards;
}

// LIST ITEMS & CARDS
@mixin list-item-enter($duration: var(--motion-duration-short3), $delay: 0ms) {
  opacity: 0;
  transform: translateY(20px);
  animation: list-item-enter $duration var(--motion-easing-emphasized-decelerate) $delay forwards;
}

@mixin card-enter($duration: var(--motion-duration-short4)) {
  @include shared-axis-y-forward($duration);
}

@mixin card-exit($duration: var(--motion-duration-short3)) {
  animation: fade-out $duration var(--motion-easing-emphasized-accelerate) forwards;
}

// PAGE TRANSITIONS
@mixin page-enter-forward($duration: var(--motion-duration-medium2)) {
  @include shared-axis-x-forward($duration);
}

@mixin page-enter-backward($duration: var(--motion-duration-medium2)) {
  @include shared-axis-x-backward($duration);
}

@mixin page-exit-forward($duration: var(--motion-duration-short4)) {
  animation: shared-axis-x-exit-forward $duration var(--motion-easing-emphasized-accelerate) forwards;
}

@mixin page-exit-backward($duration: var(--motion-duration-short4)) {
  animation: shared-axis-x-exit-backward $duration var(--motion-easing-emphasized-accelerate) forwards;
}

// CONTENT REPLACEMENT
@mixin content-replace-out($duration: var(--motion-duration-short1)) {
  @include fade-through-out($duration);
}

@mixin content-replace-in($duration: var(--motion-duration-short3), $delay: var(--motion-duration-short1)) {
  @include fade-through-in($duration, var(--motion-easing-standard-decelerate), $delay);
}

// HERO TRANSITIONS
@mixin hero-enter($duration: var(--motion-duration-medium2)) {
  @include container-transform-enter($duration);
}

@mixin hero-exit($duration: var(--motion-duration-short4)) {
  @include container-transform-exit($duration);
}

// -----------------------------------------------------------------------------
// UTILITY MIXINS
// -----------------------------------------------------------------------------

// Responsive stagger using calc()
@mixin stagger-children($base-delay: var(--motion-stagger-delay), $max-items: 10) {
  @for $i from 1 through $max-items {
    &:nth-child(#{$i}) {
      animation-delay: calc(#{$base-delay} * #{$i - 1});
      // Device-responsive: Mobile 25ms, Desktop 12.5ms per item
    }
  }
}

// Advanced stagger with custom scaling
@mixin scaled-stagger($scale-factor: 1, $max-items: 10) {
  @for $i from 1 through $max-items {
    &:nth-child(#{$i}) {
      animation-delay: calc(var(--motion-stagger-delay) * #{$scale-factor} * #{$i - 1});
      // Example: scaled-stagger(2) = double the stagger timing on all devices
    }
  }
}

// Directional slide helper
@mixin slide-from-direction($direction: 'up', $duration: var(--motion-duration-medium1)) {
  @if $direction == 'up' {
    @include sheet-enter-from-bottom($duration);
  } @else if $direction == 'down' {
    @include sheet-enter-from-top($duration);
  } @else if $direction == 'left' {
    @include sheet-enter-from-right($duration);
  } @else if $direction == 'right' {
    @include sheet-enter-from-left($duration);
  }
}

@mixin slide-to-direction($direction: 'down', $duration: var(--motion-duration-short3)) {
  @if $direction == 'up' {
    @include sheet-exit-to-top($duration);
  } @else if $direction == 'down' {
    @include sheet-exit-to-bottom($duration);
  } @else if $direction == 'left' {
    @include sheet-exit-to-left($duration);
  } @else if $direction == 'right' {
    @include sheet-exit-to-right($duration);
  }
}

// Accessibility helper
@mixin respect-motion-preference() {
  @media (prefers-reduced-motion: reduce) {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

// Global multiplier override (for themes or special modes)
@mixin set-motion-multiplier($multiplier) {
  --motion-multiplier: #{$multiplier};
  // Override device-specific multiplier for special cases
  // Example: Slow motion mode, debugging, accessibility
}

// Performance optimization for older devices
@mixin reduced-animation-on-low-end() {
  @media screen and (max-width: 480px) and (max-height: 800px) {
    animation-duration: calc(var(--motion-duration-short2)) !important;
  }
} 